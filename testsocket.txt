Express server listening on port 2000and host0.0.0.0
Socket {
  id: 'kNYUO7GJ-noFsOq2AAAA',
  server: Server {
    clients: { 'kNYUO7GJ-noFsOq2AAAA': [Circular] },
    clientsCount: 1,
    wsEngine: 'ws',
    pingTimeout: 5000,
    pingInterval: 25000,
    upgradeTimeout: 10000,
    maxHttpBufferSize: 100000000,
    transports: [ 'polling', 'websocket' ],
    allowUpgrades: true,
    allowRequest: [Function: bound ],
    cookie: 'io',
    cookiePath: '/',
    cookieHttpOnly: true,
    perMessageDeflate: { threshold: 1024 },
    httpCompression: { threshold: 1024 },
    initialPacket: [ '0' ],
    ws: WebSocketServer {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      options: [Object],
      [Symbol(kCapture)]: false
    },
    _events: [Object: null prototype] { connection: [Function: bound ] },
    _eventsCount: 1
  },
  upgrading: false,
  upgraded: false,
  readyState: 'open',
  writeBuffer: [
    {
      type: 'message',
      options: [Object],
      data: '2["newUser","kNYUO7GJ-noFsOq2AAAA"]'
    }
  ],
  packetsFn: [],
  sentCallbackFn: [],
  cleanupFn: [ [Function], [Function] ],
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: false,
      reading: false,
      sync: true,
      needReadable: false,
      emittedReadable: true,
      readableListening: false,
      resumeScheduled: true,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] { end: [Array] },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 5000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      [Symbol(asyncId)]: 10,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4957,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 22,
        [Symbol(triggerId)]: 17
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 5000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      [Symbol(asyncId)]: 10,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4957,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 22,
        [Symbol(triggerId)]: 17
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: '192.168.4.38:2000',
      connection: 'keep-alive',
      'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Mobile Safari/537.36',
      accept: '*/*',
      referer: 'http://192.168.4.38:2000/',
      'accept-encoding': 'gzip, deflate',
      'accept-language': 'en-US,en;q=0.9',
      cookie: 'io=pBLRevjM3p_s-bL7AAAA'
    },
    rawHeaders: [
      'Host',
      '192.168.4.38:2000',
      'Connection',
      'keep-alive',
      'User-Agent',
      'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Mobile Safari/537.36',
      'Accept',
      '*/*',
      'Referer',
      'http://192.168.4.38:2000/',
      'Accept-Encoding',
      'gzip, deflate',
      'Accept-Language',
      'en-US,en;q=0.9',
      'Cookie',
      'io=pBLRevjM3p_s-bL7AAAA'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/socket.io/?EIO=3&transport=polling&t=NSy_1CQ',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 5000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      [Symbol(asyncId)]: 10,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4957,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 22,
        [Symbol(triggerId)]: 17
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: true,
    _query: [Object: null prototype] {
      EIO: '3',
      transport: 'polling',
      t: 'NSy_1CQ'
    },
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      socket: null,
      connection: null,
      _header: 'HTTP/1.1 200 OK\r\n' +
        'Content-Type: text/plain; charset=UTF-8\r\n' +
        'Content-Length: 103\r\n' +
        'Access-Control-Allow-Origin: *\r\n' +
        'Set-Cookie: io=kNYUO7GJ-noFsOq2AAAA; Path=/; HttpOnly\r\n' +
        'Date: Tue, 26 Jan 2021 04:38:08 GMT\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      statusMessage: 'OK',
      statusCode: 200,
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: null
    },
    cleanup: [Function: cleanup],
    [Symbol(kCapture)]: false
  },
  remoteAddress: '192.168.4.38',
  checkIntervalTimer: null,
  upgradeTimeoutTimer: null,
  pingTimeoutTimer: Timeout {
    _idleTimeout: 30000,
    _idlePrev: [TimersList],
    _idleNext: [TimersList],
    _idleStart: 4945,
    _onTimeout: [Function],
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: false,
    [Symbol(refed)]: true,
    [Symbol(asyncId)]: 16,
    [Symbol(triggerId)]: 12
  },
  transport: XHR {
    readyState: 'open',
    discarded: false,
    closeTimeout: 30000,
    maxHttpBufferSize: 100000000,
    httpCompression: { threshold: 1024 },
    supportsBinary: true,
    _events: [Object: null prototype] {
      error: [Function],
      packet: [Function: bound ],
      drain: [Array],
      close: [Function],
      headers: [Function]
    },
    _eventsCount: 5,
    sid: 'kNYUO7GJ-noFsOq2AAAA',
    req: null,
    res: null,
    writable: false
  },
  _events: [Object: null prototype] {
    close: [ [Function], [Function: bound ] ],
    data: [Function: bound ],
    error: [Function: bound ]
  },
  _eventsCount: 3
} kNYUO7GJ-noFsOq2AAAA
